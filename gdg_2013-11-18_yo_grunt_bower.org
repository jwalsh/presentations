#+TITLE: Yeoman / Grunt / Bower
#+AUTHOR: Jason Walsh
#+EMAIL: jwalsh@bluekai.com
#+KEYWORDS: javascript, tools, build, chrome, google, gdg
#+DESCRIPTION: Build Chrome Applications with Bower, Grunt, and Yeoman. Seattle Google Developer Group, November 18, 2013

# Branches 
# s0 - Bare Chrome App
# s1 - Scaffolding
# s2
# s3
# s4 - Bower owns Angular 
# s5 - Grunt task for compression 
# s11 - Angular app with dependency update and manifest

* Overview
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

file:gdg_2013-11-18_yo_grunt_bower/toolset.png

- Increased visibility in the last year of JavaScript tools 
- Integrate two applications and update the configuration
- Why do the tools exist 
  
* Yeoman, Grunt, and Bower with Packaged Apps and AngularJS

#+BEGIN_QUOTE
Create a Chrome packaged application that uses the Google Drive API
and an Angular application and add in support for manifest generation. 
#+END_QUOTE

* Setup 

** Yeoman 

Find the following applications: /generator-chromeapp/ and /generator-angular/

#+BEGIN_SRC sh
yo
#+END_SRC

#+BEGIN_SRC sh
npm -g install generator-{chromeapp,angular}
#+END_SRC

* Chrome App Project (gDrive)                                            :s0:

# sandbox/gdg_2013-11-18_yo_grunt_bower/todoChrm

** Setup 

#+BEGIN_SRC sh
mkdir -p driveChrome && cd $_
yo chromeapp:app
npm install
#+END_SRC

** Layout
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_EXAMPLE
|-- Gruntfile.js
|-- app
|   |-- bower_components
|   |-- images
|   |-- index.html
|   |-- manifest.json
|   |-- scripts
|   `-- styles
|-- bower.json
`-- package.json
#+END_EXAMPLE
   
* Chrome App Build

** Building 

#+BEGIN_SRC sh
grunt
#+END_SRC
** Output
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_EXAMPLE
Running "jshint:all" (jshint) task
>> 2 files lint free.

Running "clean:server" (clean) task

Running "concurrent:test" (concurrent) task
#+END_EXAMPLE

* Chrome App Verify 

- View the application 
- Tools > Extensions 
- Load Unpacked Extension 

file:gdg_2013-11-18_yo_grunt_bower/driveChrome.png

* Chrome App Feature (s3)
  
http://developer.chrome.com/apps/angular_framework.html

# rm -rf app ; cp -R ../chrome-app-samples/gdrive app

- Update the app functionality 
- driveChrome is a sample application that uses Angular 
- Rebuild as a watcher 
- We're going to remove the hosted dependency on Angular

* Chrome App Dependencies (s4)

** Angular 

#+BEGIN_SRC sh
bower install angular\#1.0.8 --save-dev
#+END_SRC

#+BEGIN_SRC json
  "devDependencies": {
    "angular": "~1.2"
  }
#+END_SRC

** Remove Local 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_SRC html
<script src="bower_components/angular/angular.js"></script>
#+END_SRC

* Chrome App Compression (s5)

#+BEGIN_SRC sh
npm install grunt-contrib-compress --save-dev
#+END_SRC

#+BEGIN_SRC javascript
// grunt.loadNpmTasks('grunt-contrib-compress');
    compress: {
      main: {
        options: {
          archive: 'archive.zip'
        },
        files: [
          {src: ['app/**']}
        ]
      }
    },
#+END_SRC

* Chrome App Linting 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_SRC sh
fixjsstyle Gruntfile.js app
#+END_SRC

#+BEGIN_EXAMPLE
    "indent": 2,
#+END_EXAMPLE

#+BEGIN_SRC sh
grunt server
#+END_SRC

* Angular Project (Buzz) (s10)

  # gdg_2013-11-18_yo_grunt_bower/angularBuzz

** Setup 

#+BEGIN_SRC sh
mkdir -p buzzAngular && cd $_
yo
npm install
grunt serve
#+END_SRC

** Layout
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_EXAMPLE
|-- Gruntfile.js
|-- app
|   |-- index.html
|   |-- scripts
|   |-- styles
|   `-- views
|-- bower.json
|-- package.json
`-- test
    |-- runner.html
    `-- spec
#+END_EXAMPLE

* Angular Chrome Manifest

# https://npmjs.org/package/grunt-chrome-manifest

#+BEGIN_SRC sh
npm install grunt-chrome-manifest --save-dev
#+END_SRC

#+BEGIN_SRC js
grunt.loadNpmTasks('grunt-chrome-manifest');
grunt.registerTask('default', ['chromeManifest:dist']);
#+END_SRC

#+BEGIN_SRC json
chromeManifest: {
  dist: {
    options: {
      buildnumber: 'both',
      background: {
        target: 'scripts/background.js',
        exclude: [
          'background/scripts/chromereload.js'
        ]
      }
    },
    src: 'app',
    dest: 'dist'
  }
}
#+END_SRC

* Angular Application 

#+BEGIN_SRC 
{
  "name": "Angular Package App Demo",
  "description": "Demo",
  "version": "1",
  "app": {
    "launch": {
      "local_path": "index.html"
    }
  },
  "icons": {
    "16": "icon_16.png",
    "128": "icon_128.png"
  }
}
#+END_SRC

* Angular Dependencies
  
** Update dependencies 

#+BEGIN_SRC js
    "es5-shim": "~2.1.0",
    "jquery": "~2.0.3",
    "sass-bootstrap": "~3.0.0",

#+END_SRC

* Yeoman Creates Projects
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

  http://yeoman.io/

Other task-oriented build tools: 

- rails, lein 

file:gdg_2013-11-18_yo_grunt_bower/eg-yo.png

* Yeoman Generators

#+BEGIN_SRC sh
yo --help
#+END_SRC

** Searching 
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

#+BEGIN_SRC sh
npm search yeoman-generator chromeapp
npm search yeoman-generator angular
#+END_SRC

# https://npmjs.org/package/generator-angular

** Updating 
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

#+BEGIN_SRC sh
npm update -g generator-chromeapp
#+END_SRC

* Grunt Builds Projects 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

  http://gruntjs.com/

- make, ant, rake, gradle, lein

file:gdg_2013-11-18_yo_grunt_bower/eg-grunt.png

#+BEGIN_SRC sh
grunt --help
#+END_SRC

* Grunt Plugins
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

- Grunt.js search on GitHub
- https://npmjs.org/browse/keyword/gruntplugin

Use GitHub for sample plugins: 

https://github.com/search?o=desc&q=Gruntfile.js&ref=cmdform&s=stars&type=Repositories

- https://github.com/angular/angular.js/blob/master/Gruntfile.js
- https://github.com/eBay/skin/blob/master/Gruntfile.js
- https://github.com/fleeting/gruntfile.js/blob/master/gruntfile.js

* Grunt Plugins Angular

#+BEGIN_SRC json
    "grunt-autoprefixer": "~0.4.0",
    "grunt-concurrent": "~0.4.1",
    "grunt-contrib-coffee": "~0.7.0",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-htmlmin": "~0.1.3",
    "grunt-contrib-imagemin": "~0.3.0",
    "grunt-contrib-jshint": "~0.7.1",
    "grunt-contrib-uglify": "~0.2.0",
    "grunt-contrib-watch": "~0.5.2",
    "grunt-google-cdn": "~0.2.0",
    "grunt-ngmin": "~0.0.2",
    "grunt-rev": "~0.1.0",
    "jshint-stylish": "~0.1.3",
    "load-grunt-tasks": "~0.2.0",
    "time-grunt": "~0.2.0"
#+END_SRC
* Grunt plugins Angular DI
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

#+BEGIN_QUOTE
You can try to alleviate the pain connected with writing DI
annotations by using build-time tools that would post-process your
code and add annotations automatically. 
...
Still, if your build system is Grunt.js based, you can give the
ngmin Grunt.js task (grunt-ngmin)
a try.
#+END_QUOTE

/Mastering Web Application Development with AngularJS/ (Kindle Locations 6454-6457).

* Bower Manages Dependencies
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

  http://bower.io/

- ivy, maven, pip 

file:gdg_2013-11-18_yo_grunt_bower/eg-bower.png

#+BEGIN_SRC sh
bower --help
#+END_SRC

* JavaScript Tools
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

- project templates
- consistency of style 
- compile on watch 
- static builds 
- HTML rewriting 
- shell script 
- CSS pre-processors
- dependency checking 

These all feed into the lifestyle of projects in JavaScript. 

* Friction 

- Offline access 
- file:// development locally
- Version control and sub-module access 
- Server-side integration
- Old tutorials
- Local build tools need local NPM hosting

* Conclusion

- Useful in single page applications 
- Merging generators will likely not result in the correct outcome 
- Still very young 

* Questions?

- Deck: http://bit.ly/I0g5RN
- Generator: https://npmjs.org/package/generator-crangular
- Examples: https://github.com/jwalsh/gdg_2013-11-18_yo_grunt_bower

- Twitter: @jwalsh_
- GitHub: jwalsh

#+OPTIONS: num:nil toc:nil

# Local Variables:
# End:
