#+TITLE: Chrome Application using AngularJS with Yeoman, Grunt, Bower
#+AUTHOR: Jason Walsh
#+EMAIL: jwalsh@bluekai.com
#+KEYWORDS: javascript, tools, build, chrome, google, gdg
#+DESCRIPTION: Build Chrome Applications with Bower, Grunt, and Yeoman. Seattle Google Developer Group, November 18, 2013

* Overview
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

file:gdg_2013-11-18_yo_grunt_bower/toolset.png

- Integrate a productivity app for Chrome using Angular
- Why do the tools exist 
- What do they do 
- When would you want to use 

* Getting Started on Buzz

file:gdg_2013-11-18_yo_grunt_bower/dog.png

- http://developer.chrome.com/apps/about_apps.html
- chrome://apps/
- Personal task management logger: https://chrome.google.com/webstore/category/app/87-task-management

* Setup 

** Yeoman 

Find the following applications: /generator-chromeapp/ and /generator-angular/

#+BEGIN_SRC sh
yo
#+END_SRC

#+BEGIN_SRC sh
npm -g install generator-{chromeapp,angular}
#+END_SRC

* Chrome App Project (Buzz)
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

** Setup 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_SRC sh
mkdir -p ~/sandbox/gdgChromeAppBuzz && cd $_
yo chromeapp:app
npm install
#+END_SRC

** Layout
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_EXAMPLE
|-- Gruntfile.js
|-- app
|   |-- _locales
|   |-- bower_components
|   |-- images
|   |-- index.html
|   |-- manifest.json
|   |-- scripts
|   `-- styles
|-- bower.json
`-- package.json
#+END_EXAMPLE

* Chrome App Build

** Building 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_SRC sh
grunt
#+END_SRC

** Output
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_EXAMPLE
Running "jshint:all" (jshint) task
>> 2 files lint free.

Running "clean:server" (clean) task

Running "concurrent:test" (concurrent) task
#+END_EXAMPLE

* Chrome App Dependencies

** Add Angular components

** Angular 

#+BEGIN_SRC sh
bower install angular
#+END_SRC

** Generation
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_SRC sh
grunt server
#+END_SRC


* Chrome App Installation

** Install 

- chrome://flags/ 
- > Experimental Extension APIs

** Compress

- https://github.com/gruntjs/grunt-contrib-compress

#+BEGIN_SRC sh
npm install grunt-contrib-compress --save-dev
#+END_SRC

#+BEGIN_SRC javascript
grunt.loadNpmTasks('grunt-contrib-compress');
#+END_SRC

#+BEGIN_SRC javascript
compress: {
  main: {
    expand: true,
    cwd: 'app/',
    src: ['**/*'],
    dest: 'app.zip'
  }
}
#+END_SRC

* Angular Project (Buzz)
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

** Example 

- angular-seed/
- angular.js/example
- todomvc

** Yeoman

We're going to go through the setup of a Chrome Application for
pulling down a gallery locally from Flickr. 

or using two generators. 

- https://npmjs.org/package/generator-angular

* Angular Build

** Source 

We'll be using one of the example applications from the Angular
examples.

#+BEGIN_SRC sh
cd angular.js
git checkout v1.2.1
#+END_SRC

** Manifest

https://npmjs.org/package/grunt-chrome-manifest

#+BEGIN_SRC sh
npm install grunt-chrome-manifest
#+END_SRC

* Angular Dependencies

** Update dependencies 

By default we'll see 

#+BEGIN_SRC html
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="bower_components/angular/angular.js"></script>
#+END_SRC

** Add jQuery 


#+BEGIN_SRC sh
bower install jquery
#+END_SRC
* Yeoman Creates Projects
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

** http://yeoman.io/

Other task-oriented build tools: 

- rails 
- lein 

** Layout 
file:gdg_2013-11-18_yo_grunt_bower/mwada-filesystem.png

#+BEGIN_EXAMPLE
Gruntfile.js app          bower.json   dist         node_modules package.json test
#+END_EXAMPLE

* Grunt Builds Projects 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

** http://gruntjs.com/

- make 
- ant 
- rake 
- gradle 
- lein


#+BEGIN_SRC sh
grunt
grunt --help
#+END_SRC

* Bower Manages Dependencies
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

** http://bower.io/

#+BEGIN_SRC sh
bower install angular --save-dev
#+END_SRC



- ivy 
- maven 
- pip 

* JavaScript Tools
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

- project templates
- consistency of style 
- compile on watch 
- static builds 
- HTML rewriting 
- shell script 
- CSS pre-processors
- dependency checking 

These all feed into the lifestyle of projects in JavaScript. 

* Watching 
* Updating
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

Updating versions of components is trivial. Regression testing 


#+BEGIN_SRC sh
npm update -g generator-chromeapp
#+END_SRC

* Searching

** Yeoman 
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:
file:gdg_2013-11-18_yo_grunt_bower/yo.png


- npm searching 

Alternatively we could have done: 

#+BEGIN_SRC sh
npm search yeoman-generator chromeapp
npm search yeoman-generator angular
#+END_SRC

** Grunt 
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

- Grunt.js search on github 


- external tools (sass and coffeescript)
- code coverage 
- unit testing 
- compatibility testing 

Use GitHub for sample plugins: 

https://github.com/search?o=desc&q=Gruntfile.js&ref=cmdform&s=stars&type=Repositories

- https://github.com/angular/angular.js/blob/master/Gruntfile.js
- https://github.com/eBay/skin/blob/master/Gruntfile.js
- https://github.com/fleeting/gruntfile.js/blob/master/gruntfile.js



- Unit testing 
- Wrap
- Linting

* Installation
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

Starting with a clean installation.  

* History
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

This is broadly the history of all JavaScript Tooling: 



- 2011: Static analysis 
- JSLint 
- February 2011: JSHint http://badassjs.com/post/3364925033/jshint-an-community-driven-fork-of-jslint
- March 2012 Grunt releases with init and basic task support (Ben
  Alman) http://benalman.com/news/2012/03/introducing-grunt/
- April 2012 Grunt and Yeoman as a tools tracks at JSConf (both Irish and Alman ) http://2012.jsconf.us/ 
- June 2012 Grunt on a session for http://events.jquery.org/2012/sf/
- June 2012 Yeoman releases at Google I/O
  groups and http://www.youtube.com/watch?v=Mk-tFn2Ix6g
- November 2012 first public Bower release at 0.5 from Twitter 
- February 2013: Grunt 0.4 adds local checkout  

* Grunt plugins
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

- http://gruntjs.com/plugins/

* Updating 
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

The story for adding in new features 

* Package Privacy 

 locally for project

bower register <my-package-name> <git-endpoint>

* Friction 

- Version control and submodule access 
- Server-side integration
- Beware of old tutorials
- Local build tools need local NPM hosting

* Conclusion

- Useful in single page applications 
- Merging generators will likely not result in the correct outcome 
- Still very young 

* Questions?

- Deck: http://wal.sh/p/gdg_2013-11-18_yo_grunt_bower.html
- Generator: https://npmjs.org/package/generator-crangular

- Twitter: @jwalsh_
- Email: jwalsh@bluekai.com

#+OPTIONS: num:nil toc:nil

# Local Variables:
# End:
