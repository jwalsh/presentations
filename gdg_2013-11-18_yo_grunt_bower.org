#+TITLE: Yeoman / Grunt / Bower
#+AUTHOR: Jason Walsh
#+EMAIL: jwalsh@bluekai.com
#+KEYWORDS: javascript, tools, build, chrome, google, gdg
#+DESCRIPTION: Build Chrome Applications with Bower, Grunt, and Yeoman. Seattle Google Developer Group, November 18, 2013

* Overview
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

file:gdg_2013-11-18_yo_grunt_bower/toolset.png

- Integrate a simple app for Chrome using Angular
- Integrate a simple Angular application into a Chrome App
- Why do the tools exist 
- What do they do 
- When would you want to use 

* Yeoman, Grunt, and Bower with Chrome Applications and AngularJS

file:gdg_2013-11-18_yo_grunt_bower/dog.png

- http://developer.chrome.com/apps/about_apps.html
- chrome://apps/

* Setup 

** Yeoman 

Find the following applications: /generator-chromeapp/ and /generator-angular/

#+BEGIN_SRC sh
yo
#+END_SRC

#+BEGIN_SRC sh
npm -g install generator-{chromeapp,angular}
#+END_SRC

* Chrome App Project (Buzz) 
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

# sandbox/gdgChromeAppBuzz

** Setup 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_SRC sh
mkdir -p ~/sandbox/gdgChromeAppBuzz && cd $_
yo chromeapp:app
npm install
#+END_SRC

** Layout
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_EXAMPLE
|-- Gruntfile.js
|-- app
|   |-- _locales
|   |-- bower_components
|   |-- images
|   |-- index.html
|   |-- manifest.json
|   |-- scripts
|   `-- styles
|-- bower.json
`-- package.json
#+END_EXAMPLE

* Chrome App Build

** Building 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_SRC sh
grunt
#+END_SRC
** Output
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_EXAMPLE
Running "jshint:all" (jshint) task
>> 2 files lint free.

Running "clean:server" (clean) task

Running "concurrent:test" (concurrent) task
#+END_EXAMPLE

* Chrome App Dependencies

** Angular 

#+BEGIN_SRC sh
bower install angular
#+END_SRC

** Generation
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_SRC sh
grunt server
#+END_SRC

* Chrome App Installation

** Install 

- chrome://flags/ 
- > Experimental Extension APIs

** Compress

- https://github.com/gruntjs/grunt-contrib-compress

#+BEGIN_SRC sh
npm install grunt-contrib-compress --save-dev
#+END_SRC

#+BEGIN_SRC javascript
grunt.loadNpmTasks('grunt-contrib-compress');
#+END_SRC

#+BEGIN_SRC javascript
compress: {
  main: {
    expand: true,
    cwd: 'app/',
    src: ['**/*'],
    dest: 'app.zip'
  }
}
#+END_SRC

* Chrome App Integration 

#+BEGIN_SRC sh
cp -r ../../angular-seed/app/{index.html,partials,js,css,lib} .
#+END_SRC

** Linting 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_SRC sh
fixjsstyle Gruntfile.js app
#+END_SRC

#+BEGIN_EXAMPLE
    "indent": 2,
#+END_EXAMPLE

** CSP 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:
   
Update the CSP for the application to allow access. 

* Angular Project (Buzz) 
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

# gdg_2013-11-18_yo_grunt_bower/tmpAng

** Setup 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_SRC sh
mkdir -p ~/sandbox/gdgAngularBuzz && cd $_
yo angular:app
npm install
#+END_SRC

** Layout
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

#+BEGIN_EXAMPLE
|-- Gruntfile.js
|-- app
|   |-- 404.html
|   |-- favicon.ico
|   |-- index.html
|   |-- robots.txt
|   |-- scripts
|   |-- styles
|   `-- views
|-- bower.json
|-- karma-e2e.conf.js
|-- karma.conf.js
|-- package.json
`-- test
    |-- runner.html
    `-- spec
#+END_EXAMPLE

* Angular Build

** Source 

We'll be using one of the example applications from the Angular
examples.

#+BEGIN_SRC sh
cd angular.js
git checkout v1.2.1
#+END_SRC

** Manifest

https://npmjs.org/package/grunt-chrome-manifest

#+BEGIN_SRC sh
npm install grunt-chrome-manifest
#+END_SRC

* Angular Dependencies

** Update dependencies 

By default we'll see 

#+BEGIN_SRC html
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="bower_components/angular/angular.js"></script>
#+END_SRC

** Add jQuery 


#+BEGIN_SRC sh
bower install jquery
#+END_SRC
* Yeoman Creates Projects
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

  http://yeoman.io/

Other task-oriented build tools: 

- rails 
- lein 

file:gdg_2013-11-18_yo_grunt_bower/eg-yo.png

#+BEGIN_SRC sh
yo --help
#+END_SRC

* Grunt Builds Projects 
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

  http://gruntjs.com/

- make 
- ant 
- rake 
- gradle 
- lein

file:gdg_2013-11-18_yo_grunt_bower/eg-grunt.png

#+BEGIN_SRC sh
grunt --help
#+END_SRC

* Bower Manages Dependencies
   :PROPERTIES:
   :HTML_CONTAINER_CLASS: slide
   :END:

** http://bower.io/

- ivy 
- maven 
- pip 

file:gdg_2013-11-18_yo_grunt_bower/eg-bower.png

#+BEGIN_SRC sh
bower --help
#+END_SRC

* JavaScript Tools
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

- project templates
- consistency of style 
- compile on watch 
- static builds 
- HTML rewriting 
- shell script 
- CSS pre-processors
- dependency checking 

These all feed into the lifestyle of projects in JavaScript. 

* Watching 

Watching changes following save:

#+BEGIN_SRC sh
grunt watch
#+END_SRC

* Yeoman Generators
file:gdg_2013-11-18_yo_grunt_bower/yo.png


** Searching 
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

#+BEGIN_SRC sh
npm search yeoman-generator chromeapp
npm search yeoman-generator angular
#+END_SRC

- https://npmjs.org/package/generator-angular

** Updating 
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

#+BEGIN_SRC sh
npm update -g generator-chromeapp
#+END_SRC


* Grunt Plugins
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

- Grunt.js search on github 


- external tools (sass and coffeescript)
- code coverage 
- unit testing 
- compatibility testing 

Use GitHub for sample plugins: 

https://github.com/search?o=desc&q=Gruntfile.js&ref=cmdform&s=stars&type=Repositories

- https://github.com/angular/angular.js/blob/master/Gruntfile.js
- https://github.com/eBay/skin/blob/master/Gruntfile.js
- https://github.com/fleeting/gruntfile.js/blob/master/gruntfile.js



- Unit testing 
- Wrap
- Linting

* Grunt Plugins Angular

#+BEGIN_SRC json
{
  "name": "gdgangularbuzz",
  "version": "0.0.0",
  "dependencies": {},
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-autoprefixer": "~0.4.0",
    "grunt-concurrent": "~0.4.1",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-coffee": "~0.7.0",
    "grunt-contrib-compass": "~0.6.0",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-connect": "~0.5.0",
    "grunt-contrib-copy": "~0.4.1",
    "grunt-contrib-cssmin": "~0.7.0",
    "grunt-contrib-htmlmin": "~0.1.3",
    "grunt-contrib-imagemin": "~0.3.0",
    "grunt-contrib-jshint": "~0.7.1",
    "grunt-contrib-uglify": "~0.2.0",
    "grunt-contrib-watch": "~0.5.2",
    "grunt-google-cdn": "~0.2.0",
    "grunt-ngmin": "~0.0.2",
    "grunt-rev": "~0.1.0",
    "grunt-svgmin": "~0.2.0",
    "grunt-usemin": "~2.0.0",
    "jshint-stylish": "~0.1.3",
    "load-grunt-tasks": "~0.2.0",
    "time-grunt": "~0.2.0"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  }
}
#+END_SRC
* Grunt plugins Angular DI
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

- http://gruntjs.com/plugins/

#+BEGIN_QUOTE
You can try to alleviate the pain connected with writing DI
annotations by using build-time tools that would post-process your
code and add annotations automatically. Such tools are not trivial to
write (as JavaScript code analysis is required) and are not widespread
yet. Still, if your build system is Grunt.js based, you can give the
ngmin (https:// github.com/ btford/ ngmin) Grunt.js task (grunt-ngmin)
a try.

Kozlowski, Pawel; Darwin, Peter Bacon (2013-08-23). Mastering Web
Application Development with AngularJS (Kindle Locations 6454-6457).
PACKT PUBLISHING. Kindle Edition. 
#+END_QUOTE

* History
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

This is broadly the history of all JavaScript Tooling: 



- 2011: Static analysis 
- JSLint 
- February 2011: JSHint http://badassjs.com/post/3364925033/jshint-an-community-driven-fork-of-jslint
- March 2012 Grunt releases with init and basic task support (Ben
  Alman) http://benalman.com/news/2012/03/introducing-grunt/
- April 2012 Grunt and Yeoman as a tools tracks at JSConf (both Irish and Alman ) http://2012.jsconf.us/ 
- June 2012 Grunt on a session for http://events.jquery.org/2012/sf/
- June 2012 Yeoman releases at Google I/O
  groups and http://www.youtube.com/watch?v=Mk-tFn2Ix6g
- November 2012 first public Bower release at 0.5 from Twitter 
- February 2013: Grunt 0.4 adds local checkout  

* Yeoman Generators 




* Updating 
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: slide
  :END:

The story for adding in new features 

* Package Privacy 

 locally for project

bower register <my-package-name> <git-endpoint>

* Friction 

- Version control and submodule access 
- Server-side integration
- Beware of old tutorials
- Local build tools need local NPM hosting

* Conclusion

- Useful in single page applications 
- Merging generators will likely not result in the correct outcome 
- Still very young 

* Questions?

- Deck: http://wal.sh/p/gdg_2013-11-18_yo_grunt_bower.html
- Generator: https://npmjs.org/package/generator-crangular

- Twitter: @jwalsh_
- Email: jwalsh@bluekai.com

#+OPTIONS: num:nil toc:nil

# Local Variables:
# End:
