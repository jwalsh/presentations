#+TITLE: Yeoman, Grunt, Bower
#+AUTHOR: Jason Walsh
#+KEYWORDS: javascript, tools, build, chrome, google, gdg
#+DESCRIPTION: Build Chrome Applications with Bower, Grunt, and Yeoman.

#+BEGIN_HTML
<div class="reveal">
    <div class="slides">
    <p>Type <strong>T</strong> to begin the slide show.</p>
#+END_HTML

* Chrome Application + AngularJS with Yeoman, Grunt, Bower            :slide:

[[file:toolset.png][file:~/sandbox/presentations/toolset.png]]

Jason Walsh, BlueKai 

* Roadmap                                                             :slide:

- Why do the tools exist 
- What do they do 
- How can you use 
- When would you want to use 

* What                                                                :slide:

Simplify workflow for JavaScript applications. Best example are the notes in: 

http://a.blip.tv/api.swf#g_MngvbfHwI

Paul Irish - JavaScript Tooling http://2012.jsconf.us/

* Equivalence                                                         :slide:

- Butlers maintains your house.  
- Warthogs provide manual work. 
- Birds maintain your nest. 

** Yeoman                                                             :slide:

- rails 
- lein new {template}

#+BEGIN_SRC sh
mkdir my-chrome-app && cd my-chrome-app
yo chromeapp:app my-chrome-app
#+END_SRC

** Grunt                                                              :slide:

- make 
- rake 
- ant 

#+BEGIN_SRC sh
grunt
#+END_SRC

** Bower                                                              :slide:

#+BEGIN_SRC sh
bower install angular --save-dev
#+END_SRC
pulls down dependencies 
http://bower.io/

- ivy 
- maven 
- pip 

* AngularJS Example                                                   :slide:

** Yeoman

We're going to go through the setup of a Chrome Application for
pulling down a gallery locally from Flickr. 

* Updating                                                            :slide:

Updating versions of components is trivial. Regression testing 

#+BEGIN_SRC sh
npm update -g generator-chromeapp
#+END_SRC

* Chrome App Example 

- Local install only where we want help with CRX packaging 
- Cover the standard case of a new application and also the update
  story 
- Ensure integration into existing stacks is notes 


* Installation                                                        :slide:

Starting with a clean installation.  

* JavaScript Tools                                                    :slide:

- consistency of style 
- compile on watch 
- static builds 
- shell script 
- css preprocessors

These all feed into the lifestyle of projects in JavaScript. 

* History                                                             :slide:

This is broadly the history of all JavaScript Tooling: 



- 2011: Static analysis 
- JSLint 
- February 2011: JSHint http://badassjs.com/post/3364925033/jshint-an-community-driven-fork-of-jslint
- March 2012 Grunt releases with init and basic task support (Ben
  Alman) http://benalman.com/news/2012/03/introducing-grunt/
- April 2012 Grunt and Yeoman as a tools tracks at JSConf (both Irish and Alman ) http://2012.jsconf.us/ 
- June 2012 Grunt on a session for http://events.jquery.org/2012/sf/
- June 2012 Yeoman releases at Google I/O
  groups and http://www.youtube.com/watch?v=Mk-tFn2Ix6g
- November 2012 first public Bower release at 0.5 from Twitter 
- February 2013: Grunt 0.4 adds local checkout  

* Grunt plugins


- external tools (sass and coffeescript)
- code coverage 
- unit testing 
- compatibility testing 

Use 
/research/javascript-instrumentation.txt:

* Updating 

The story for adding in new features 

* Package Privacy 

 locally for project

bower register <my-package-name> <git-endpoint>

* Resources


  
* Contact                                                             :slide:

- Twitter: @jwalsh_
- Email: jwalsh@bluekai.com


#+OPTIONS: num:nil tags:t

#+TAGS: slide(s)

#+HTML_CONTAINER: section
#+HTML_HEAD_EXTRA: <link rel="stylesheet" href="reveal.js/css/reveal.min.css">
#+HTML_HEAD_EXTRA: <link rel="stylesheet" href="reveal.js/css/theme/default.css" id="theme">
#+HTML_HEAD_EXTRA: <link rel="stylesheet" href="reveal.js/lib/css/zenburn.css">

#+BEGIN_HTML

  </div><!-- slides -->
</div><!-- reveal -->

<script src="reveal.js/lib/js/head.min.js"></script>
<script src="reveal.js/js/reveal.min.js"></script>

<script>
Reveal.initialize({});
</script>


#+END_HTML

# Local Variables:
# org-html-head-include-default-style: nil
# org-html-head-include-scripts: nil
# End:
